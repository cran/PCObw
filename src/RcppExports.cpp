// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// h_GK_1D_exact
double h_GK_1D_exact(Eigen::VectorXd xi, int nh_max, double tol);
RcppExport SEXP _PCObw_h_GK_1D_exact(SEXP xiSEXP, SEXP nh_maxSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(h_GK_1D_exact(xi, nh_max, tol));
    return rcpp_result_gen;
END_RCPP
}
// h_EK_1D_exact
double h_EK_1D_exact(Eigen::VectorXd xi, int nh_max, double tol);
RcppExport SEXP _PCObw_h_EK_1D_exact(SEXP xiSEXP, SEXP nh_maxSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(h_EK_1D_exact(xi, nh_max, tol));
    return rcpp_result_gen;
END_RCPP
}
// h_BK_1D_exact
double h_BK_1D_exact(Eigen::VectorXd xi, int nh_max, double tol);
RcppExport SEXP _PCObw_h_BK_1D_exact(SEXP xiSEXP, SEXP nh_maxSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(h_BK_1D_exact(xi, nh_max, tol));
    return rcpp_result_gen;
END_RCPP
}
// h_GK_1D_bin
double h_GK_1D_bin(Eigen::VectorXd xi, int nb_bin, int nh_max, double tol, bool adapt_nb_bin);
RcppExport SEXP _PCObw_h_GK_1D_bin(SEXP xiSEXP, SEXP nb_binSEXP, SEXP nh_maxSEXP, SEXP tolSEXP, SEXP adapt_nb_binSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< int >::type nb_bin(nb_binSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type adapt_nb_bin(adapt_nb_binSEXP);
    rcpp_result_gen = Rcpp::wrap(h_GK_1D_bin(xi, nb_bin, nh_max, tol, adapt_nb_bin));
    return rcpp_result_gen;
END_RCPP
}
// h_EK_1D_bin
double h_EK_1D_bin(Eigen::VectorXd xi, int nb_bin, int nh_max, double tol, bool adapt_nb_bin);
RcppExport SEXP _PCObw_h_EK_1D_bin(SEXP xiSEXP, SEXP nb_binSEXP, SEXP nh_maxSEXP, SEXP tolSEXP, SEXP adapt_nb_binSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< int >::type nb_bin(nb_binSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type adapt_nb_bin(adapt_nb_binSEXP);
    rcpp_result_gen = Rcpp::wrap(h_EK_1D_bin(xi, nb_bin, nh_max, tol, adapt_nb_bin));
    return rcpp_result_gen;
END_RCPP
}
// h_BK_1D_bin
double h_BK_1D_bin(Eigen::VectorXd xi, int nb_bin, int nh_max, double tol, bool adapt_nb_bin);
RcppExport SEXP _PCObw_h_BK_1D_bin(SEXP xiSEXP, SEXP nb_binSEXP, SEXP nh_maxSEXP, SEXP tolSEXP, SEXP adapt_nb_binSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< int >::type nb_bin(nb_binSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type adapt_nb_bin(adapt_nb_binSEXP);
    rcpp_result_gen = Rcpp::wrap(h_BK_1D_bin(xi, nb_bin, nh_max, tol, adapt_nb_bin));
    return rcpp_result_gen;
END_RCPP
}
// h_GK_mD_diag_exact
Eigen::VectorXd h_GK_mD_diag_exact(Eigen::MatrixXd x_i, int nh_max, double tol);
RcppExport SEXP _PCObw_h_GK_mD_diag_exact(SEXP x_iSEXP, SEXP nh_maxSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(h_GK_mD_diag_exact(x_i, nh_max, tol));
    return rcpp_result_gen;
END_RCPP
}
// h_GK_mD_full_exact
Eigen::MatrixXd h_GK_mD_full_exact(Eigen::MatrixXd x_i, Eigen::MatrixXd S, int nh_max, double tol);
RcppExport SEXP _PCObw_h_GK_mD_full_exact(SEXP x_iSEXP, SEXP SSEXP, SEXP nh_maxSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(h_GK_mD_full_exact(x_i, S, nh_max, tol));
    return rcpp_result_gen;
END_RCPP
}
// h_GK_binned_mD_diag
Eigen::VectorXd h_GK_binned_mD_diag(Eigen::MatrixXd x_i, int nh_max, double tol, int nb_bin_per_axis, Rcpp::Nullable<Eigen::VectorXd> nb_bin_vect_);
RcppExport SEXP _PCObw_h_GK_binned_mD_diag(SEXP x_iSEXP, SEXP nh_maxSEXP, SEXP tolSEXP, SEXP nb_bin_per_axisSEXP, SEXP nb_bin_vect_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type nb_bin_per_axis(nb_bin_per_axisSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Eigen::VectorXd> >::type nb_bin_vect_(nb_bin_vect_SEXP);
    rcpp_result_gen = Rcpp::wrap(h_GK_binned_mD_diag(x_i, nh_max, tol, nb_bin_per_axis, nb_bin_vect_));
    return rcpp_result_gen;
END_RCPP
}
// h_GK_binned_mD_full
Eigen::MatrixXd h_GK_binned_mD_full(Eigen::MatrixXd x_i, Eigen::MatrixXd S, int nh_max, double tol, int nb_bin_per_axis, Rcpp::Nullable<Eigen::VectorXd> nb_bin_vect_);
RcppExport SEXP _PCObw_h_GK_binned_mD_full(SEXP x_iSEXP, SEXP SSEXP, SEXP nh_maxSEXP, SEXP tolSEXP, SEXP nb_bin_per_axisSEXP, SEXP nb_bin_vect_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type nh_max(nh_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type nb_bin_per_axis(nb_bin_per_axisSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Eigen::VectorXd> >::type nb_bin_vect_(nb_bin_vect_SEXP);
    rcpp_result_gen = Rcpp::wrap(h_GK_binned_mD_full(x_i, S, nh_max, tol, nb_bin_per_axis, nb_bin_vect_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PCObw_h_GK_1D_exact", (DL_FUNC) &_PCObw_h_GK_1D_exact, 3},
    {"_PCObw_h_EK_1D_exact", (DL_FUNC) &_PCObw_h_EK_1D_exact, 3},
    {"_PCObw_h_BK_1D_exact", (DL_FUNC) &_PCObw_h_BK_1D_exact, 3},
    {"_PCObw_h_GK_1D_bin", (DL_FUNC) &_PCObw_h_GK_1D_bin, 5},
    {"_PCObw_h_EK_1D_bin", (DL_FUNC) &_PCObw_h_EK_1D_bin, 5},
    {"_PCObw_h_BK_1D_bin", (DL_FUNC) &_PCObw_h_BK_1D_bin, 5},
    {"_PCObw_h_GK_mD_diag_exact", (DL_FUNC) &_PCObw_h_GK_mD_diag_exact, 3},
    {"_PCObw_h_GK_mD_full_exact", (DL_FUNC) &_PCObw_h_GK_mD_full_exact, 4},
    {"_PCObw_h_GK_binned_mD_diag", (DL_FUNC) &_PCObw_h_GK_binned_mD_diag, 5},
    {"_PCObw_h_GK_binned_mD_full", (DL_FUNC) &_PCObw_h_GK_binned_mD_full, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_PCObw(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
